const lowerCaseString="abcdefghijklmnopqrstuvwxyz",upperCaseString="ABCDEFGHIJKLMNOPQRSTUVWXYZ",numbersString="1234567890",specialString="`~!@#$%^&*()-=_+[]{}|;':\",./<>?",hexString="123456789ABCDEF";function generateKey(e,r,t,n,a,s){let g="",o="";if(t&&s)throw Error("A String can not be generated with uppercase & hex letters at same time!");r&&(g+=lowerCaseString),t&&(g+=upperCaseString),n&&(g+=numbersString),a&&(g+=specialString),s&&(g+=hexString);for(let r=0;r<e;r++)o+=g[Math.floor(Math.random()*g.length)];return o}function getKeyType(e){switch(e){case"rememberable_password":return generateKey(10,!0,!0,!0,!1,!1);case"strong_password":return generateKey(15,!0,!0,!0,!0,!1);case"ultrastrong_password":return generateKey(30,!0,!0,!0,!0,!1);case"long_license_key":return generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1);case"short_license_key":return generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1)+"-"+generateKey(5,!1,!0,!0,!1);default:throw Error("Type "+e+" does not exist!")}}